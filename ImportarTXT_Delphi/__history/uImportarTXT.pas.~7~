unit uImportarTXT;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, DBGrids, StdCtrls, DB, DBClient, ADODB;

type
  TForm1 = class(TForm)
    cds1: TClientDataSet;
    Button1: TButton;
    DBGrid1: TDBGrid;
    DataSource1: TDataSource;
    cds1Nome: TStringField;
    cds1RG: TStringField;
    cds1UF: TStringField;
    cds1CPF: TStringField;
    cds1Mae: TStringField;
    cds1Nascimento: TStringField;
    cds1Habilitacao: TStringField;
    cds1Registro: TStringField;
    cds1Validade: TStringField;
    cds1Categoria: TStringField;
    cds1Status: TStringField;
    cds1Estudo: TStringField;
    cds1Bloqueado: TStringField;
    Sp1: TADOStoredProc;
    ADOConnection1: TADOConnection;
    Label1: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }



  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

var

    Arquivo     : TextFile;
    Contador, I : Integer;
    Linha       : String;

function MontaValor : String;
 var
 valorMontado : String;
 begin

  valorMontado := '';
  Inc(I);

  while Linha[I] >= ' ' do
   begin
     if Linha[I] = ';' then
      Break;

     valorMontado := valorMontado + Linha[I];
     Inc(I);

   end;

   Result := valorMontado;

 end;


procedure TForm1.Button1Click(Sender: TObject);
begin


  AssignFile(Arquivo, 'C:\Users\rodrigorangel\Desktop\MSC\RENACH.txt');
  Reset(Arquivo);



  try

    Readln(Arquivo,Linha);
    Contador := 0;

    cds1.CreateDataSet;
    cds1.Open;

    Cursor := crHourGlass;

    while not Eoln(Arquivo) do
    begin

     {
      cds1.Append;

      cds1Nome.AsString := MontaValor;
      cds1RG.AsString := MontaValor;
      cds1UF.AsString := MontaValor;
      cds1CPF.AsString := MontaValor;
      cds1Mae.AsString := MontaValor;
      cds1Nascimento.AsString := MontaValor;
      cds1Habilitacao.AsString := MontaValor;
      cds1Registro.AsString := MontaValor;
      cds1Validade.AsString := MontaValor;
      cds1Categoria.AsString := MontaValor;
      cds1Status.AsString := MontaValor;
      cds1Estudo.AsString := MontaValor;
      cds1Bloqueado.AsString := MontaValor;

      cds1.Post;
      }

        Sp1.Close;
        Sp1.ProcedureName := 'Stb_Renach_Inserir';
        Sp1.Parameters.Refresh;
        Sp1.Parameters.ParamByName('@nome').Value := MontaValor;
        Sp1.Parameters.ParamByName('@RG').Value := MontaValor;
        Sp1.Parameters.ParamByName('@UF').Value := MontaValor;
        Sp1.Parameters.ParamByName('@CPF').Value := MontaValor;
        Sp1.Parameters.ParamByName('@mae').Value := MontaValor;
        Sp1.Parameters.ParamByName('@nascimento').Value := MontaValor;
        Sp1.Parameters.ParamByName('@habilitacao').Value := MontaValor;
        Sp1.Parameters.ParamByName('@registro').Value := MontaValor;
        Sp1.Parameters.ParamByName('@validade').Value := MontaValor;
        Sp1.Parameters.ParamByName('@categoria').Value := MontaValor;
        Sp1.Parameters.ParamByName('@status').Value := MontaValor;
        Sp1.Parameters.ParamByName('@estudo').Value := MontaValor;
        Sp1.Parameters.ParamByName('@bloqueado').Value := MontaValor;
        Sp1.ExecProc;

      Contador := Contador + 1;

      label1.Caption := '';
      label1.Caption := 'Total de Registros processados : ' + IntToStr(Contador);
      Application.ProcessMessages;

      Readln(Arquivo,Linha);
    end;

  finally

     CloseFile(Arquivo);
     Cursor := crDefault;

  end;






end;

end.
